/* 
  1.box-sizing 설정해줬음
  2. body에 있는 기본 마진 0으로 처리
  3. hero 클래스 설정
  4. .container 설정
  5. .hero__txt 설정
  6. 구글 폰트 html에 넣기(css전에)
  7. 폰트를 body에 적용하기(사이트 전체에서 사용할 수 있도록
  8. body에 폰트사이즈 적용하기(rem)
  9. h1 폰트 적용(rem)
  10. .btn(a태그) 스타일링. 
  - display: inline-block;설정
  - padding은 em으로 설정. 해당 태그의 폰트 사이즈에 비례해서 커지고 작아지게 하기 위해.
  - 이 a태그와 위 <p>태그 사이에 여백이 있지만 .margin-top은 주지 않음. 분명히 미래에 뭔가 더 추가될 거기 떄문에
  - 따라서 <P>에 margin-bottom을 em으로 줌. hero__text처럼 클래스를 만들어 줘도 되지만 여기서는 그냥 p태그로 했음
  - em은 항상 해당 클래스의 폰트를 기준으로 크기를 산정하는데, 여기서는 해당 태그에 설정된 것이 없고 body에 설정된 font-size값을 기준으로 함.

  11. 버튼에 마우스를 올렸을 때의 효과를 줌
    - .btn:hober, .btn:focue {}
*/


*, *::before, *::after {
  box-sizing: border-box;
}

body {
  margin:0;
  font-family: "Roboto", sans-serif;
  /* font-size: 21px; rem으로 써주는 데 익숙해지자 */
  font-size: 1.3125rem;
}

h1 {
  font-size: 3rem;
}


.container {
  /* border: 2px solid yellow; */
  width: 80%;
  /* max-width값을 주지 않으면 div가 계속 커져서 마치 가운데 정렬하지 않은 것처럼 보이게 된다.
  텍스트는 그대로이고 왼쪽 정렬인데 박스는 계속 커지니까 그렇게 느껴지는 것이다 */
  max-width: 1100px;
  margin: 0 auto;
}

.hero {
  /* padding: 100px; 이렇게 줘버리면 작은 화면에서의 크게 느껴진다.
  따라서 패딩을 아래처럼 준다. 그러면 양 옆으로 딱 붙어버려서 이상하지만, .container 또는 wrapper 클래스로
  .hero 내부의 태그들을 감싼 뒤 해당 클래스에 스타일링(width, margin, max-width)을 해주면 된다.. */
  padding: 100px 0;
  background-color: #23424a;
  color: #fff;
}


 /* 부모, 즉 .container 너비의 50퍼센트 너비만큼만 사용함. body의 너비를 기준으로 할 때  body * 80% * 50%   
    그런데 이런 식으로 하게 되면 나중에 내용이 추가되었을 때 힘들어질 수 있다. (옆에 그림의 들어온다든지)
    따라서 hero__text라는 클래스로 h1과 p를 감싸주자. 이름에 __을 붙인 것은 BEM의 명명법을 따른 것으로서,
    이 컴포넌트가 hero 컴포넌트의 서브 컴포넌트라는 의미이다.
  */
/* .hero p {
 
  width: 50%;
} */


.hero__text {
  width: 50%;
  /* border: 1px solid pink; */
}

.hero p {
  margin-bottom: 3em;
}

.btn {
  display: inline-block;
  background-color: #38cfd9;
  padding: .75em 2em;
  border-radius: 100px;

  text-decoration: none;
  text-transform: uppercase;
  color: #23424a;
  font-weight: 900;
}

.btn:hover, .btn:focus {
  opacity: .75;
}